version: '3.4'

services:

  zk1:
    image: zookeeper:3.4.9
    hostname: zk1
    container_name: zk1
    ports:
      - 2181:2181
    volumes:
    - /home/docker/zookeeper/conf/zoo.cfg:/conf/zoo.cfg
    - /home/docker/zookeeper/data:/data
    - /home/docker/zookeeper/log:/datalog
    - /etc/localtime:/etc/localtime
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - 'node.hostname==whdata132'
 
  zk2:
    image: zookeeper:3.4.9
    container_name: zk2
    hostname: zk2
    ports:
    - "2182:2181"
    volumes:
    - /home/docker/zookeeper/conf/zoo.cfg:/conf/zoo.cfg
    - /home/docker/zookeeper/data:/data
    - /home/docker/zookeeper/log:/datalog
    - /etc/localtime:/etc/localtime
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zk3:2888:3888
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata133'
 
  zk3:
    image: zookeeper:3.4.9
    container_name: zk3
    hostname: zk3
    ports:
    - "2183:2181"
    volumes:
    - /home/docker/zookeeper/conf/zoo.cfg:/conf/zoo.cfg
    - /home/docker/zookeeper/data:/data
    - /home/docker/zookeeper/log:/datalog
    - /etc/localtime:/etc/localtime
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata134'
 
  kafka1:
    image: wurstmeister/kafka:2.11-2.0.1
    container_name: kafka1
    hostname: kafka1
    ports:
    - 9091:9092
    environment:
      KAFKA_HOST_NAME: kafka1
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9091
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka1:9091
      #KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9091
      #KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.131:9091
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_BROKER_ID: 0
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 16
      KAFKA_NUM_REPLICA_FETCHERS: 4
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 48
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - /home/docker/kafka/log:/kafka
    links:
    - zk1
    - zk2
    - zk3
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata131'
 
  kafka2:
    image: wurstmeister/kafka:2.11-2.0.1
    container_name: kafka2
    hostname: kafka2
    ports:
    - 9092:9092
    environment:
      KAFKA_HOST_NAME: kafka2
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_PORT: 9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka2:9092
      #KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9092
      #KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.132:9092
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_BROKER_ID: 1
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 16
      KAFKA_NUM_REPLICA_FETCHERS: 4
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 48
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - "/home/docker/kafka/log:/kafka"
    links:
    - zk1
    - zk2
    - zk3
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata132'
 
  kafka3:
    image: wurstmeister/kafka:2.11-2.0.1
    container_name: kafka3
    hostname: kafka3
    ports:
    - 9093:9092
    environment:
      KAFKA_HOST_NAME: kafka3
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_ADVERTISED_PORT: 9093
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka3:9093
      #KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      #KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.133:9093
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_BROKER_ID: 2
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 16
      KAFKA_NUM_REPLICA_FETCHERS: 4
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 48
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - "/home/docker/kafka/log:/kafka"
    links:
    - zk1
    - zk2
    - zk3
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata133'

  kafka4:
    image: wurstmeister/kafka:2.11-2.0.1
    container_name: kafka4
    hostname: kafka4
    ports:
    - 9094:9092
    environment:
      KAFKA_HOST_NAME: kafka4
      KAFKA_ADVERTISED_HOST_NAME: kafka4
      KAFKA_ADVERTISED_PORT: 9094
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka4:9094
      #KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      #KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.134:9094
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_BROKER_ID: 3
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka4:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 16
      KAFKA_NUM_REPLICA_FETCHERS: 4
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 48
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - /etc/localtime:/etc/localtime
    - "/home/docker/kafka/log:/kafka"
    depends_on:
      - zk1
      - zk2
      - zk3
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata134'

  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
    - 9080:9000
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      - zk1
      - zk2
      - zk3
    links:
      - zk1
      - zk2
      - zk3  
    environment:
      ZK_HOSTS: zk1:2181,zk2:2181,zk3:2181
      #ZK_HOSTS: 192.168.1.132:2181,192.168.1.133:2182,192.168.1.134:2183
    networks:
      - zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata134'

  #mysql:
    #image: mysql:5.7.17
    #container_name: mysql
    #environment:
      #- "MYSQL_ROOT_PASSWORD=whdata"
      #- "MYSQL_DATABASE=replicas_db"
      #- TZ=Asia/Shanghai
    #volumes:
    #- /home/docker/mysql/data:/var/lib/mysql"
    #- /home/docker/mysql/my.cnf:/etc/mysql/my.cnf
    #ports:
    #- "3306:3306"
    #hostname: mysql
    #networks:
      #- icop-db
    #deploy:
      #replicas: 1
      #restart_policy:
         #condition: on-failure
      #placement:
        #constraints:
         #- 'node.hostname==whdata132'

  redis:
    image: redis:5.0.4
    container_name: redis
    command: redis-server /redis-master/redis.conf
    ports:
    - 6379:6379
    volumes:
    - "/home/docker/redis/conf:/redis-master"
    - "/home/docker/redis/data:/data"
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    networks:
      - icop-db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata133'

  influxdb-raw:
    image: influxdb:1.8.3
    container_name: influxdb-raw
    hostname: influx-raw
    volumes:
      - /home/docker/influxdb-raw/conf:/etc/influxdb
      - /home/docker/influxdb-raw/data:/var/lib/influxdb/data
      - /home/docker/influxdb-raw/meta:/var/lib/influxdb/meta
      - /home/docker/influxdb-raw/wal:/var/lib/influxdb/wal
    ports:
      - "8083:8083"
      - "8086:8086"
    environment:
      - TZ=Asia/Shanghai
    networks:
      - icop-db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata131'

  influxdb-health:
    image: influxdb:1.8.3
    container_name: influxdb-health
    hostname: influx-health
    volumes:
      - /home/docker/influxdb-health/conf:/etc/influxdb
      - /home/docker/influxdb-health/data:/var/lib/influxdb/data
      - /home/docker/influxdb-health/meta:/var/lib/influxdb/meta
      - /home/docker/influxdb-health/wal:/var/lib/influxdb/wal
    ports:
      - "8084:8083"
      - "8087:8086"
    environment:
      - TZ=Asia/Shanghai
    networks:
      - icop-db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdata132'

  tomcat:
    container_name: tomcat
    #image: tomcat:8.5.11
    image: whdata_tomcat:8.5.11
    #ports:
      #- 8080:8080
    network_mode: host
    #挂载
    volumes:
      #- /home/docker/tomcat/logs:/usr/local/tomcat/logs
      #- /home/docker/tomcat/webapps:/usr/local/tomcat/webapps
      #- /home/docker/tomcat/uploadfile:/opt/uploadfile
      - /home/docker/tomcat/logs:/docker/tomcat/logs
      - /home/docker/tomcat/webapps:/docker/tomcat/webapps
      - /home/docker/tomcat/uploadfile:/docker/tomcat/uploadFiles
    command:
      - sh
      - -c
      - |
        source /etc/profile
        sleep 5
        systemctl stop firewalld
        sleep 5
        ./docker/tomcat/bin/catalina.sh run
    environment:
      - TZ=Asia/Shanghai
    networks:
      - icop-db
      - zoo_kafka
    links:
      - zk1
      - zk2
      - zk3
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      #- mysql
      - redis
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
         - 'node.hostname==whdata131'

networks:
  zoo_kafka:
    driver: overlay
  icop-db:
    driver: overlay
