version: '3.3'

services:

  zk1:
    image: zookeeper:3.6.2
    container_name: zk1
    hostname: zk1
    ports:
    #- "2181:2181"
    - target: 2181
      published: 2181
      mode: host
    volumes:
    - /home/docker/zookeeper/conf/zoo.cfg:/conf/zoo.cfg
    - /home/docker/zookeeper/data:/data
    - /home/docker/zookeeper/log:/datalog
    - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
      STANDALONEENABLED: "true"
      ADMIN_ENABLESERVER: "true"
    #networks: 
      #- zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest02'

  kafka1:
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: kafka1
    hostname: kafka1
    ports:
    #- 9092:9092
    - target: 9092
      published: 9092
      mode: host
    environment:
      KAFKA_HOST_NAME: kafka1
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181
      KAFKA_BROKER_ID: 0
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_NUM_REPLICA_FETCHERS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2 
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 24
    volumes:
    - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    - /home/docker/kafka/log:/kafka
    depends_on:
    - zk1
    #networks:
      #- zoo_kafka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest02'
    

  #kafka-manager:
    #image: sheepkiller/kafka-manager
    #container_name: kafka-manager
    #hostname: kafka-manager
    #ports:
    #- 9080:9000
    #depends_on:
    #- kafka1
    #- zk1
    #environment:
    #  ZK_HOSTS: zk1:2181
    #networks:
    #  - zoo_kafka
    #deploy:
    #  replicas: 1
    #  restart_policy:
    #    condition: on-failure
    #  placement:
    #    constraints:
    #     - 'node.hostname==whdtest02'

  #mysql:
    #image: mysql:5.7.17
    #container_name: mysql
    #environment:
      #- "MYSQL_ROOT_PASSWORD=whdata"
      #- "MYSQL_DATABASE=replicas_db"
      #- TZ=Asia/Shanghai
    #volumes:
    #- /home/docker/mysql/data:/var/lib/mysql"
    #- /home/docker/mysql/my.cnf:/etc/mysql/my.cnf
    #ports:
    #- "3306:3306"
    #hostname: mysql
    #networks:
      #- dbs
    #deploy:
      #replicas: 1
      #restart_policy:
         #condition: on-failure
      #placement:
        #constraints:
         #- 'node.hostname==whdata132'

  elastic01:
    image: elasticsearch:7.11.2
    container_name: elastic01
    privileged: true
    environment:
      - "cluster.name=elasticsearch"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TAKE_FILE_OWNERSHIP=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
    - /home/docker/elastic/data:/usr/share/elasticsearch/data
    - /home/docker/elastic/logs:/usr/share/elasticsearch/logs
    - /home/docker/elastic/plugins:/usr/share/elasticsearch/plugins
    - /etc/localtime:/etc/localtime
    ports:
    #- 9200:9200
    #- 9300:9300
    - target: 9200
      published: 9200
      mode: host
    - target: 9300
      published: 9300
      mode: host
    #networks:
      #- es
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest03'
      
  es-head:
    image: mobz/elasticsearch-head:5
    container_name: es-head
    ports:
    #- 9100:9100
    - target: 9100
      published: 9100
      mode: host
    #networks: 
      #- es
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest03'

  neo4j:
    image: neo4j:4.1.3
    container_name: neo4j
    privileged: true
    environment:
      - NEO4J_AUTH=neo4j/whdata315 # or none
    ports:
    #- "7474:7474"
    #- "7687:7687"
    - target: 7474
      published: 7474
      mode: host
    - target: 7687
      published: 7687
      mode: host
    volumes:
    - "/home/docker/neo4j/data:/var/lib/neo4j/data"
    - "/home/docker/neo4j/logs:/var/lib/neo4j/logs"
    - "/home/docker/neo4j/plugins:/var/lib/neo4j/plugins"
    #networks:
      #- dbs
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest04'

  redis:
    image: redis:5.0.4
    container_name: redis
    command: redis-server /redis-master/redis.conf
    ports:
    #- 6379:6379
    - target: 6379
      published: 6379
      mode: host
    volumes:
    - "/home/docker/redis/conf:/redis-master"
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    #networks:
      #- dbs
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest01'

  nginx:
    image: whdata_nphp:4.4
    container_name: nphp
    command:
      - sh
      - -c
      - |
        source /etc/profile
        sleep 5
        /usr/local/php7.4/sbin/php-fpm -R
        nohup /usr/local/nginx/sbin/nginx > /dev/null 2>&1 &
        tail -f /dev/null
    environment:
      - TZ=Asia/Shanghai
    ports:
      - target: 7280
        published: 7280
        mode: host
      - target: 7289
        published: 7289
        mode: host
      - target: 8443
        published: 8443
        mode: host
      - target: 9000
        published: 9000
        mode: host
    volumes:
      - /home/docker/nginx/conf/nginx.conf:/usr/local/nginx/conf/nginx.conf
      - /home/docker/nginx/www/html:/usr/local/nginx/html
      - /home/docker/nginx/php/www.conf:/usr/local/php7.4/etc/php-fpm.d/www.conf
      - /home/docker/nginx/php/php.ini:/usr/local/php7.4/lib/php.ini
      - /home/docker/nginx/uploadfile:/opt/uploadfile
      - /etc/localtime:/etc/localtime
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
         - 'node.hostname==whdtest01'
    #networks:
      #- dbs
      #- es
      #- zoo_kafka

#networks:
  #zoo_kafka:
    #driver: overlay
  #dbs:
    #driver: overlay
  #es:
    #driver: overlay

