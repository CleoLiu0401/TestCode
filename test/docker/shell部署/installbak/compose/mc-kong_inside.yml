version: '3.3'

services:
  kong-inside-migra:
    image: whdata_kong:2.6.0
    container_name: mc_konginside_migra
    command: "kong migrations bootstrap"
    environment:
      - KONG_DATABASE=${MC_KONG_DATABASE}
      - KONG_PG_HOST=${MC_KONG_PG_HOST}
      - KONG_PG_DATABASE=${MC_KONG_PG_DATABASE}
      - KONG_PG_PASSWORD=${MC_KONG_PG_PASSWORD}
      - KONG_CASSANDRA_CONTACT_POINTS=${MC_KONG_CASSANDRA_CONTACT_POINTS}
    networks:
      - kong-net
    links:
    - kong-db
    depends_on:
    - kong-db
    restart: on-failure

  kong-inside:
    image: whdata_kong:2.6.0
    container_name: kong_inside
    environment:
      - KONG_DATABASE=${MC_KONG_DATABASE}
      - KONG_PG_HOST=${MC_KONG_PG_HOST}
      - KONG_PG_PASSWORD=${MC_POSTGRES_PASSWORD}
      - KONG_PG_DATABASE=${MC_KONG_PG_DATABASE}
      - KONG_CASSANDRA_CONTACT_POINTS=${MC_KONG_CASSANDRA_CONTACT_POINTS}
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8002, 0.0.0.0:8444 ssl
    volumes:
      - ${MC_INSTALL_PATH}/mc_stack/docker_volume/kong-inside/conf/kong.conf:/etc/kong/kong.conf
    ports:
    - target: 8000
      published: ${MC_KONG_INSIDE_PORT01}
      mode: host
    - target: 8002
      published: ${MC_KONG_INSIDE_PORT02}
      mode: host
    networks:
      - kong-net
    depends_on:
    - kong-db
    - kong-inside-migra
    restart: always
