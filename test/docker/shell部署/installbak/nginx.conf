#定义Nginx运行的用户和用户组
user  root;

#nginx进程数，建议设置为等于CPU总核心数
worker_processes  4;

events {
    #参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ];
    #epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。
    use epoll;

    #单个进程最大连接数（最大连接数=连接数*进程数）
    worker_connections  65535;
}

http {
    #文件扩展名与文件类型映射表
    include       mime.types;

    #默认文件类型
    default_type  application/octet-stream;

    #默认编码
    charset utf-8;

    #服务器名字的hash表大小
    #如果配置多个 server 虚拟主机, 必须配置
    server_names_hash_bucket_size 64;

    #请求行+请求头的标准大小
    client_header_buffer_size 32k;

    #请求行+请求头的最大大小
    large_client_header_buffers 4 64k;

    #文件上传最大大小
    client_max_body_size 50m;

    #开启高效文件传输模式
    sendfile        on;

    #防止网络阻塞
    tcp_nopush on;

    #防止网络阻塞
    tcp_nodelay on;

    #连接存活超时时间，默认为65s，如果下面需要修改，这个时候一定要与之相同或更大
    keepalive_timeout 600s;

    #nginx跟后端服务器连接超时时间(代理连接超时)
    proxy_connect_timeout  600s;

    #后端服务器数据回传时间(代理发送超时)
    proxy_send_timeout  600s;

    #连接成功后，后端服务器响应时间(代理接收超时)
    proxy_read_timeout  600s;

    #指定nginx与后端fastcgi server连接超时时间
    fastcgi_connect_timeout 600s;

    #指定nginx向后端传送请求超时时间（指已完成两次握手后向fastcgi传送请求超时时间）
    fastcgi_send_timeout 600s;

    #指定nginx向后端传送响应超时时间（指已完成两次握手后向fastcgi传送响应超时时间）
    fastcgi_read_timeout 600s;

    #gzip模块设置

    #开启gzip压缩输出
    gzip on;

    #最小压缩文件大小
    gzip_min_length 1k;

    #压缩缓冲区
    gzip_buffers 4 16k;

    #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
    gzip_http_version 1.0;

    #压缩等级
    gzip_comp_level 2;

    #压缩类型, 默认就已经包含text/html
    gzip_types text/plain application/x-javascript text/css application/xml;

    #是否传输gzip压缩标志
    gzip_vary on;

    #虚拟主机的配置
    # 前端的配置
    server {
        listen       21308;
        server_name  1.1.1.1;

        location / {
            rewrite ^/(.*)$ /portal last;
        }

         location ~ ^/(\w+) {
            try_files $uri $uri/ /$1/index.html;
            root /opt/mc_stack/frontends;
        }
    }

    # 后端的配置
    include /etc/nginx/nginxs/*.conf;
}
